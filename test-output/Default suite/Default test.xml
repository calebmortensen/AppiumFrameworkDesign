<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="ThinkP51" failures="0" tests="1" name="Default test" time="64.233" errors="0" timestamp="2024-09-03T14:43:24 PDT">
  <testcase classname="org.calebmortensen.BaseSetup" name="@BeforeClass ConfigureAppium" time="63.932">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: The instrumentation process cannot be initialized within 30000ms timeout. Make sure the application under test does not crash and investigate the logcat output. You could also try to increase the value of &amp;apos;uiautomator2ServerLaunchTimeout&amp;apos; capability 
Host info: host: &amp;apos;THINKP51&amp;apos;, ip: &amp;apos;192.168.56.1&amp;apos;
Build info: version: &amp;apos;4.24.0&amp;apos;, revision: &amp;apos;748ffc9bc3&amp;apos;
System info: os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.6&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[Capabilities {appium:app: C:\Users\caleb\EWS\AppiumFr..., appium:automationName: UIAutomator2, appium:chromedriverExecutable: C:\Users\caleb\EWS\Appium\s..., appium:deviceName: API35, platformName: ANDROID}]}]
Capabilities {appium:app: C:\Users\caleb\EWS\AppiumFr..., appium:automationName: UIAutomator2, appium:chromedriverExecutable: C:\Users\caleb\EWS\Appium\s..., appium:deviceName: API35, platformName: ANDROID}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: The instrumentation process cannot be initialized within 30000ms timeout. Make sure the application under test does not crash and investigate the logcat output. You could also try to increase the value of 'uiautomator2ServerLaunchTimeout' capability 
Host info: host: 'THINKP51', ip: '192.168.56.1'
Build info: version: '4.24.0', revision: '748ffc9bc3'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[Capabilities {appium:app: C:\Users\caleb\EWS\AppiumFr..., appium:automationName: UIAutomator2, appium:chromedriverExecutable: C:\Users\caleb\EWS\Appium\s..., appium:deviceName: API35, platformName: ANDROID}]}]
Capabilities {appium:app: C:\Users\caleb\EWS\AppiumFr..., appium:automationName: UIAutomator2, appium:chromedriverExecutable: C:\Users\caleb\EWS\Appium\s..., appium:deviceName: API35, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:176)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:237)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:270)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:91)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:103)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:109)
at org.calebmortensen.BaseSetup.ConfigureAppium(BaseSetup.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- @BeforeClass ConfigureAppium -->
  <testcase classname="org.calebmortensen.BaseSetup" name="@AfterClass tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="org.calebmortensen.GeneralStore" name="PopulateForm" time="0.0">
    <skipped/>
  </testcase> <!-- PopulateForm -->
</testsuite> <!-- Default test -->
